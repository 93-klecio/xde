{"version":3,"sources":["application/urlUtils.js"],"names":[],"mappings":"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","file":"application/urlUtils.js","sourcesContent":["let crayon = require('@ccheever/crayon');\nlet myLocalIp = require('my-local-ip');\nlet os = require('os');\nlet url = require('url');\n\nfunction constructBundleUrl(packageController, opts) {\n  return constructUrl(packageController, opts, 'bundle');\n}\n\nfunction constructManifestUrl(packageController, opts) {\n  return constructUrl(packageController, opts, '');\n}\n\nfunction constructUrl(packageController, opts, path) {\n  opts = opts || {};\n\n  let protocol = 'exp';\n  if (opts.http) {\n    protocol = 'http';\n  }\n\n  let hostname;\n  let port;\n\n  if (opts.localhost) {\n    hostname = 'localhost';\n    port = packageController.opts.port;\n  } else if (opts.lan) {\n    hostname = os.hostname();\n    port = packageController.opts.port;\n  } else if (opts.lanIp) {\n    hostname = myLocalIp;\n    port = packageController.opts.port;\n  } else {\n    let ngrokUrl = packageController.getNgrokUrl();\n    if (!ngrokUrl) {\n      throw new Error(\"Can't get ngrok URL because ngrok not started yet\");\n    }\n\n    let pnu = url.parse(ngrokUrl);\n    hostname = pnu.hostname;\n    port = pnu.port;\n  }\n\n  let url_ = protocol + '://' + hostname;\n  if (port) {\n    url_ += ':' + port;\n  }\n\n  url_ += '/' + path;\n\n  url_ += '?dev=' + encodeURIComponent(!!opts.dev);\n  if (opts.minify) {\n    url_ += '&minify=' + encodeURIComponent(!!opts.minify);\n  }\n\n  if (opts.redirect) {\n    return 'http://exp.host/--/to-exp/' + encodeURIComponent(url_);\n  }\n\n  return url_;\n\n}\n\nfunction expUrlFromHttpUrl(url_) {\n  return ('' + url_).replace(/^http(s?)/, 'exp');\n}\n\nfunction httpUrlFromExpUrl(url_) {\n  return ('' + url_).replace(/^exp(s?)/, 'http');\n}\n\nfunction guessMainModulePath(entryPoint) {\n  return entryPoint.replace(/\\.js$/, '');\n}\n\nmodule.exports = {\n  constructBundleUrl,\n  constructManifestUrl,\n  expUrlFromHttpUrl,\n  httpUrlFromExpUrl,\n  guessMainModulePath,\n};\n"],"sourceRoot":"/source/"}