{"version":3,"sources":["ui/Commands.js"],"names":[],"mappings":";;;;;;IAIe,cAAc,qBAA7B,WAA8B,IAAI,EAAE;AAClC,SAAO,aAAY,CAAC,OAAO,EAAE,MAAM,KAAK;AACtC,QAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjD,UAAM,CAAC,cAAc,CAAC,IAAI,EAAE,UAAU,UAAU,EAAE;AAChD,aAAO,CAAC,UAAU,CAAC,CAAC;KACrB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ;;AAVD,IAAI,GAAG,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;;AAWxC,MAAM,CAAC,OAAO,GAAG;;AAEf,aAAW,oBAAE,aAAkB;;AAE7B,QAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjD,QAAI,UAAU,GAAG,MAAM,cAAc,CAAC;AACpC,gBAAU,EAAE,CAAC,eAAe,EAAE,iBAAiB,CAAC;KACjD,CAAC,CAAC;;AAEH,QAAI,UAAU,IAAI,IAAI,EAAE;AACtB,aAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;AAChD,aAAO,IAAI,CAAC;KACb;;AAED,QAAI,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;;AAE9B,QAAI,GAAG,GAAG;AACR,UAAI,EAAE,SAAS;KAChB,CAAC;;;;;;;;AAQF,UAAM,GAAG,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;;AAEzD,WAAO,GAAG,CAAC;GAEZ,CAAA;;AAED,cAAY,oBAAE,aAAkB;AAC9B,QAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjD,QAAI,UAAU,GAAG,MAAM,cAAc,CAAC;AACpC,gBAAU,EAAE,CAAC,eAAe,CAAC;KAC9B,CAAC,CAAC;;;;AAIH,QAAI,UAAU,IAAI,IAAI,EAAE;AACtB,aAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;AACjD,aAAO,IAAI,CAAC;KACb;;AAED,QAAI,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;;AAE9B,QAAI,GAAG,GAAG;AACR,UAAI,EAAE,SAAS;KAChB,CAAC;;AAEF,WAAO,GAAG,CAAC;GAEZ,CAAA;;AAED,WAAS,oBAAE,WAAgB,SAAS,EAAE,IAAI,EAAE;AAC1C,WAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;AACjC,QAAI,MAAM,GAAG,MAAM,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;AAClE,WAAO,MAAM,CAAC;GACf,CAAA;;CAEF,CAAC","file":"ui/Commands.js","sourcesContent":["\nlet Api = require('../application/Api');\nlet Exp = require('../application/Exp');\n\nasync function showOpenDialog(opts) {\n  return new Promise((fulfill, reject) => {\n    let dialog = require('remote').require('dialog');\n    dialog.showOpenDialog(opts, function (selections) {\n      fulfill(selections);\n    });\n  });\n}\n\nmodule.exports = {\n\n  newExpAsync: async function () {\n\n    let dialog = require('remote').require('dialog');\n    let selections = await showOpenDialog({\n      properties: ['openDirectory', 'createDirectory'],\n    });\n\n    if (selections == null) {\n      console.log(\"No selections; cancelled New Exp\");\n      return null;\n    }\n\n    let selection = selections[0];\n\n    let env = {\n      root: selection,\n    };\n\n    // let init = require('remote').require('./build/commands/init');\n    // let result = init.runAsync(env, {});\n\n    // We'll do a `force` here since if you explicitly choose\n    // a directory from a GUI, you probably mean to overwrite\n    // whatever is in it, I think\n    await Exp.createNewExpAsync(env.root, {}, {force: true});\n\n    return env;\n\n  },\n\n  openExpAsync: async function () {\n    let dialog = require('remote').require('dialog');\n    let selections = await showOpenDialog({\n      properties: ['openDirectory'],\n    });\n\n    // console.log(\"selections=\", selections);\n\n    if (selections == null) {\n      console.log(\"No selections; cancelled Open Exp\");\n      return null;\n    }\n\n    let selection = selections[0];\n\n    let env = {\n      root: selection,\n    };\n\n    return env;\n\n  },\n\n  sendAsync: async function (recipient, url_) {\n    console.log(\"sendAsync command\");\n    let result = await Api.callMethodAsync('send', [recipient, url_]);\n    return result;\n  },\n\n};\n"],"sourceRoot":"/source/"}