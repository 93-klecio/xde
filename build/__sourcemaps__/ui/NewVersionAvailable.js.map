{"version":3,"sources":["ui/NewVersionAvailable.js"],"names":[],"mappings":"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","file":"ui/NewVersionAvailable.js","sourcesContent":["let Radium = require('radium');\nlet React = require('react');\nlet { Button } = require('react-bootstrap');\nlet LoadingIndicator = require('react-loading-indicator');\n\nlet autobind = require('autobind-decorator');\nlet remote = require('remote');\n\nlet app = remote.require('app');\nlet AutoUpdater = remote.require('auto-updater');\n\n@Radium\nclass NewVersionAvailable extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      isVisible: false,\n      isChecking: false,\n      isDownloading: false,\n      errorMessage: null,\n      newVersion: null,\n      quitAndUpdate: null,\n    };\n  }\n\n  render() {\n\n    // N.B. If you are working on the UI for XDE updates, change this to `true` or else\n    // that UI will never show up when running `npm start`\n    let WORKING_ON_XDE_UPDATES = false;\n\n    // Should we use NODE_ENV instead of XDE_NPM_START?\n    if ((!this.state.isVisible) || (!WORKING_ON_XDE_UPDATES && process.env.XDE_NPM_START)) {\n      return <div style={styles.hidden} />;\n    }\n\n    let { isChecking, isDownloading, errorMessage, newVersion } = this.state;\n\n    let text;\n    let clickListener;\n    let buttonStyle = 'info';\n    if (errorMessage != null) {\n      text = `An error occurred while checking for a new version of XDE: ${errorMessage}. Click to retry.`;\n      clickListener = this._checkForUpdate;\n      buttonStyle = 'danger';\n    } else if (newVersion != null) {\n      text = `A new version of XDE is available. Click to restart and install XDE ${newVersion}.`;\n      clickListener = this._quitAndUpdate;\n    } else if (isDownloading) {\n      text = 'A new version of XDE is available. You can keep working while it is downloading.';\n    } else if (isChecking) {\n      text = 'Checking if there is a new version of XDE...';\n    } else {\n      text = 'Click to check for a new version of XDE.';\n    }\n\n    return (\n      <Button\n        disabled={!clickListener}\n        onClick={clickListener}\n        bsStyle={buttonStyle}\n        style={styles.container}>\n        {isChecking ?\n          <LoadingIndicator\n            color={{\n              red: 255,\n              green: 255,\n              blue: 255,\n              alpha: 1,\n            }}\n            style={styles.loadingIndicator}\n          />\n          : null}\n        <span style={styles.text}>{text}</span>\n      </Button>\n    )\n  }\n\n  componentDidMount() {\n    AutoUpdater.on('error', this._handleUpdateError);\n    AutoUpdater.on('checking-for-update', this._handleCheckingForUpdate);\n    AutoUpdater.on('update-available', this._handleUpdateAvailable);\n    AutoUpdater.on('update-not-available', this._handleUpdateNotAvailable);\n    AutoUpdater.on('update-downloaded', this._handleUpdateDownloaded);\n\n    let version = app.getVersion();\n    AutoUpdater.setFeedUrl(\n      `http://xde-updates.exponentjs.com/update/osx_64/${version}`\n    );\n    this._checkForUpdate();\n  }\n\n  componentWillUnmount() {\n    // We need to call removeAllListeners instead of removeListener because\n    // the latter doesn't work over Electron's IPC channel\n    AutoUpdater.removeAllListeners('error');\n    AutoUpdater.removeAllListeners('checking-for-update');\n    AutoUpdater.removeAllListeners('update-available');\n    AutoUpdater.removeAllListeners('update-not-available');\n    AutoUpdater.removeAllListeners('update-downloaded');\n  }\n\n  @autobind\n  _checkForUpdate() {\n    AutoUpdater.checkForUpdates();\n  }\n\n  @autobind\n  _quitAndUpdate() {\n    if (this.state.quitAndUpdate) {\n      this.state.quitAndUpdate();\n    } else {\n      console.error('Do not have a function to quit and update XDE');\n    }\n  }\n\n  @autobind\n  _handleUpdateError(event, message) {\n    this.setState({\n      isVisible: true,\n      errorMessage: message,\n      // Not strictly true that an error means we've stopped checking for\n      // updates or downloading. It depends on the error.\n      isChecking: false,\n      isDownloading: false,\n    });\n  }\n\n  @autobind\n  _handleCheckingForUpdate() {\n    this.setState({\n      isChecking: true,\n      isDownloading: false,\n      errorMessage: null,\n    });\n  }\n\n  @autobind\n  _handleUpdateAvailable() {\n    this.setState({\n      isChecking: false,\n      isDownloading: true,\n      errorMessage: null,\n    });\n  }\n\n  @autobind\n  _handleUpdateNotAvailable() {\n    this.setState({\n      isChecking: false,\n      isDownloading: false,\n      errorMessage: null,\n    });\n  }\n\n  @autobind\n  _handleUpdateDownloaded(event, releaseNotes, releaseName, releaseDate, updateUrl, quitAndUpdate) {\n    this.setState({\n      isVisible: true,\n      isChecking: false,\n      isDownloading: false,\n      errorMessage: null,\n      newVersion: releaseName,\n      quitAndUpdate,\n    });\n  }\n}\n\nlet styles = {\n  container: {\n    flex: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 'auto',\n    minHeight: 32,\n    margin: 0,\n    padding: 0,\n    borderRadius: 0,\n    whiteSpace: 'normal',\n  },\n  errorContainer: {\n    background: '#ffcdd2',\n  },\n  updateText: {\n    fontWeight: '500',\n    fontFamily: ['Helvetica Neue', 'sans-serif'],\n    fontSize: 13,\n    color: '#444',\n    textAlign: 'center',\n    padding: 4,\n  },\n  loadingIndicator: {\n    width: 20,\n    height: 20,\n    marginRight: 10,\n  },\n  hidden: {\n    display: 'none',\n  },\n};\n\nmodule.exports = NewVersionAvailable;\n"],"sourceRoot":"/source/"}