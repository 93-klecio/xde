{"version":3,"sources":["ui/VersionInfo.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAEpC,IAAI,QAAQ,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC7C,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACxC,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACtC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC7C,IAAI,QAAQ,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAC9C,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,IAAI,GAAG,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AACxC,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAClC,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,GAAG,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AACxC,IAAI,kBAAkB,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACzD,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACvC,IAAI,mBAAmB,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC3D,IAAI,mBAAmB,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC;AACxE,IAAI,cAAc,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACjD,IAAI,QAAQ,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;AAClD,IAAI,YAAY,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;AAC1D,IAAI,iBAAiB,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;AAEvD,IAAI,MAAM,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AACnD,IAAI,WAAW,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AAC7D,IAAI,aAAa,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;AACjE,IAAI,cAAc,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC;AACnE,IAAI,QAAQ,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;;IAEjD,WAAW;YAAX,WAAW;;AAEJ,WAFP,WAAW,GAED;0BAFV,WAAW;;AAGb,+BAHE,WAAW,6CAGL;AACR,QAAI,CAAC,KAAK,GAAG;AACX,wBAAkB,EAAE,IAAI;AACxB,qBAAe,EAAE,IAAI;AACrB,sBAAgB,EAAE,EAAE;AACpB,sBAAgB,EAAE,EAAE;KACrB,CAAA;GACF;;wBAVG,WAAW;;WAYT,kBAAG;AACP,UAAI,UAAU,GAAG;AACf,iBAAS,EAAE,EAAE;AACb,gBAAQ,EAAE,EAAE;OACb,CAAC;AACF,UAAI,UAAU,GAAG;AACf,gBAAQ,EAAE,EAAE;AACZ,aAAK,EAAE,GAAG;OACX,CAAC;AACF,UAAI,UAAU,GAAG;AACf,kBAAU,EAAE,KAAK;AACjB,gBAAQ,EAAE,EAAE;;AAEZ,qBAAa,EAAE,OAAO;AACtB,aAAK,EAAE,SAAS;OACjB,CAAC;;AAEF,aACE;;UAAK,KAAK,EAAE;;WAEX,AAAC;QACA;;;;SAAqB;QACrB;;YAAI,SAAS,EAAC,eAAe,EAAC,KAAK,EAAE;;aAEpC,AAAC;UACA;;;;WAAoB;UACpB;;;YAAK,IAAI,CAAC,KAAK,CAAC,kBAAkB;WAAM;UACxC;;;;WAAgB;UAChB;;;YAAK,IAAI,CAAC,KAAK,CAAC,eAAe;WAAM;SAClC;QACJ,IAAI,CAAC,oBAAoB,EAAE;OACxB,CACN;;;;;;;;;;;KAWH;;;6BAEoC,aAAG,EAEvC;;;6BAE4B,aAAG;iBACa,MAAM,SAAQ,GAAG,CAAC,CAC3D,mBAAmB,CAAC,4BAA4B,CAAC,UAAU,CAAC,EAC5D,mBAAmB,CAAC,4BAA4B,CAAC,YAAY,CAAC,CAC/D,CAAC;;;;UAHG,gBAAgB;UAAE,gBAAgB;;AAIvC,UAAI,QAAQ,GAAG;AACb,wBAAgB,EAAhB,gBAAgB;AAChB,wBAAgB,EAAhB,gBAAgB;OACjB,CAAC;AACF,UAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACxB,aAAO,QAAQ,CAAC;KACjB;;;iBAEA,QAAQ;WACO,0BAAC,KAAK,EAAE;AACtB,aAAO,AAAC,OAAO,IAAK;AAClB,eACE;AAAC,kBAAQ;YAAC,QAAQ,EAAE,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,EAAE,AAAC;UAC3C;;;YACE;;;cAAM,OAAO,CAAC,QAAQ;aAAO;YAC7B;;gBAAK,KAAK,EAAE;AACV,0BAAQ,EAAE,CAAC;AACX,uBAAK,EAAE,SAAS;iBACjB,AAAC;cAAE,OAAO,CAAC,YAAY;aAAO;WAC3B;SACG,CACX;OACH,CAAA;KACF;;;WAEmB,gCAAG;;AAErB,aACE;AAAC,sBAAc;UAAC,OAAO,EAAC,SAAS,EAAC,KAAK,EAAC,0CAA0C;QAChF;AAAC,kBAAQ;YAAC,MAAM,MAAA;;SAA6B;QAC5C,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QACrE,oBAAC,QAAQ,IAAC,OAAO,MAAA,GAAG;QACpB;AAAC,kBAAQ;YAAC,MAAM,MAAA;;SAA6B;QAC5C,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;OACpD,CACjB;KAEH;;;WAEgB,6BAAG;AAClB,YAAM,CAAC,YAAY,GAAG,IAAI,CAAC;;AAE3B,UAAI,CAAC,QAAQ,CAAC;AACZ,0BAAkB,EAAE,oCAAoC;AACxD,uBAAe,EAAE,YAAY;OAC9B,CAAC,CAAC;;AAEH,eAAQ,GAAG,CAAC,CACV,IAAI,CAAC,uBAAuB,EAAE,CAC/B,CAAC,CAAC,IAAI,CAAC,AAAC,OAAO,IAAK;AACnB,eAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;OAC3C,EAAE,AAAC,GAAG,IAAK;AACV,eAAO,CAAC,KAAK,CAAC,6BAA6B,GAAG,GAAG,CAAC,CAAC;OACpD,CAAC,CAAC;KACJ;;;SAxHG,WAAW;GAAS,KAAK,CAAC,SAAS;;AA4HzC,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"ui/VersionInfo.js","sourcesContent":["let React = require('react');\nlet ReactDOM = require('react-dom');\n\nlet autobind = require('autobind-decorator');\nlet del = require('del');\nlet escapeHtml = require('escape-html');\nlet execAsync = require('exec-async');\nlet github = require('github');\nlet gitInfoAsync = require('git-info-async');\nlet jsonFile = require('@exponent/json-file');\nlet os = require('os');\nlet path = require('path');\nlet remote = require('remote');\n\nlet Api = require('../application/Api');\nlet config = require('../config');\nlet Commands = require('./Commands');\nlet Exp = require('../application/Exp');\nlet FileSystemControls = require('./FileSystemControls');\nlet LoginPane = require('./LoginPane');\nlet NewVersionAvailable = require('./NewVersionAvailable');\nlet reactNativeReleases = require('../application/reactNativeReleases');\nlet StyleConstants = require('./StyleConstants');\nlet urlUtils = require('../application/urlUtils');\nlet userSettings = require('../application/userSettings');\nlet SimulatorControls = require('./SimulatorControls');\n\nlet Button = require('react-bootstrap/lib/Button');\nlet ButtonGroup = require('react-bootstrap/lib/ButtonGroup');\nlet ButtonToolbar = require('react-bootstrap/lib/ButtonToolbar');\nlet DropdownButton = require('react-bootstrap/lib/DropdownButton');\nlet MenuItem = require('react-bootstrap/lib/MenuItem');\n\nclass VersionInfo extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      versionDescription: null,\n      versionSpecific: null,\n      facebookReleases: [],\n      exponentReleases: [],\n    }\n  }\n\n  render() {\n    let fieldStyle = {\n      marginTop: 10,\n      fontSize: 12,\n    };\n    let inputStyle = {\n      fontSize: 12,\n      width: 300,\n    };\n    let labelStyle = {\n      fontWeight: '600',\n      fontSize: 10,\n      // fontVariant: 'small-caps',\n      letterSpacing: '0.1em',\n      color: '#aaaaaa',\n    };\n\n    return (\n      <div style={{\n        // backgroundColor: 'yellow',\n      }}>\n        <h5>React Native</h5>\n        <dl className=\"dl-horizontal\" style={{\n          // fontSize: 12,\n        }}>\n          <dt>Description</dt>\n          <dd>{this.state.versionDescription}</dd>\n          <dt>Version</dt>\n          <dd>{this.state.versionSpecific}</dd>\n        </dl>\n        {this._renderInstallButton()}\n      </div>\n    );\n\n    // return (\n    //   <div style={{\n    //     width: 600,\n    //   }}>\n    //     <div style={fieldStyle}><span style={labelStyle}>description</span><input readOnly={true} style={inputStyle} type=\"text\" value={this.state.versionDescription} /></div>\n    //     <div style={fieldStyle}><span style={labelStyle}>specific</span><input readOnly={true} style={inputStyle} type=\"text\" value={this.state.versionSpecific} /></div>\n    //     <center><Button bsSize=\"small\">Use Different Version</Button></center>\n    //   </div>\n    // );\n  }\n\n  async _installReactNativeVersionAsync() {\n\n  }\n\n  async _getListOfVersionsAsync() {\n    let [facebookReleases, exponentReleases] = await Promise.all([\n      reactNativeReleases.listReactNativeReleasesAsync('facebook'),\n      reactNativeReleases.listReactNativeReleasesAsync('exponentjs'),\n    ]);\n    let newState = {\n      facebookReleases,\n      exponentReleases,\n    };\n    this.setState(newState);\n    return newState;\n  }\n\n  @autobind\n  _releaseMenuItem(owner) {\n    return (release) => {\n      return (\n        <MenuItem eventKey={owner + '-' + release.id}>\n          <div>\n            <div>{release.tag_name}</div>\n            <div style={{\n              fontSize: 8,\n              color: '#bbbbbb',\n            }}>{release.published_at}</div>\n          </div>\n        </MenuItem>\n      );\n    }\n  }\n\n  _renderInstallButton() {\n\n    return (\n      <DropdownButton bsStyle='default' title=\"Install a Different React Native Version\">\n        <MenuItem header>Exponent Releases</MenuItem>\n        {this.state.exponentReleases.map(this._releaseMenuItem('exponentjs'))}\n        <MenuItem divider />\n        <MenuItem header>Facebook Releases</MenuItem>\n        {this.state.facebookReleases.map(this._releaseMenuItem('facebook'))}\n      </DropdownButton>\n    );\n\n  }\n\n  componentDidMount() {\n    window._VersionInfo = this;\n\n    this.setState({\n      versionDescription: 'exponentjs/react-native#2015-11-10',\n      versionSpecific: '0.12.0-dev',\n    });\n\n    Promise.all([\n      this._getListOfVersionsAsync(),\n    ]).then((results) => {\n      console.log(\"Got release data:\", results);\n    }, (err) => {\n      console.error(\"Failed to get release data:\" + err);\n    });\n  }\n\n}\n\nmodule.exports = VersionInfo;\n"],"sourceRoot":"/source/"}