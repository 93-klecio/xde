{"version":3,"sources":["application/Api.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAEjC,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAClC,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACnC,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAE7C,SAAS,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE;AAC/B,MAAI,GAAG,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;AAC7B,KAAG,CAAC,IAAI,GAAG,IAAI,CAAC;AAChB,KAAG,CAAC,WAAW,GAAG,IAAI,CAAC;AACvB,SAAO,GAAG,CAAC;CACZ;;AAED,IAAI,YAAY,GAAG,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;AAC/C,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE;AACnB,cAAY,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;CACvC;AACD,YAAY,IAAI,UAAU,CAAC;;;IAGN,SAAS;WAAT,SAAS;0BAAT,SAAS;;;eAAT,SAAS;;6BAEA,WAAC,UAAU,EAAE,IAAI,EAAE;AAC7C,UAAI,GAAG,GAAG,YAAY,GAAG,kBAAkB,CAAC,UAAU,CAAC,GAAG,GAAG,GAC3D,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;;AAE3C,UAAI,QAAQ,GAAG,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;;iBAC5B,MAAM,YAAY,CAAC,SAAS,EAAE;;UAA1C,QAAQ,QAAR,QAAQ;;AACb,UAAI,OAAO,GAAG;AACZ,sBAAc,EAAE,QAAQ;OACzB,CAAC;AACF,UAAI,QAAQ,EAAE;AACZ,eAAO,CAAC,cAAc,CAAC,GAAG,QAAQ,CAAC;OACpC;;;;AAID,UAAI,QAAQ,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,EAAC,OAAO,EAAP,OAAO,EAAC,CAAC,CAAC;AACzD,UAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AACzB,UAAI,WAAW,CAAC;AAChB,UAAI;AACF,mBAAW,GAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;OACjC,CAAC,OAAO,CAAC,EAAE;AACV,cAAM,IAAI,KAAK,CAAC,kCAAkC,GAAG,CAAC,CAAC,CAAC;OACzD;AACD,UAAI,WAAW,CAAC,GAAG,EAAE;AACnB,YAAI,GAAG,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,IAAI,WAAW,EAAE,sBAAsB,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;AAC9F,WAAG,CAAC,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC;AAClC,cAAM,GAAG,CAAC;OACX,MAAM;AACL,eAAO,WAAW,CAAC;OACpB;KACF;;;SAhCkB,SAAS;;;qBAAT,SAAS;;AAmC9B,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;AACjC,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC","file":"application/Api.js","sourcesContent":["'use strict';\n\nlet instapromise = require('instapromise');\nlet request = require('request');\n\nlet config = require('../config');\nlet session = require('./session');\nlet userSettings = require('./userSettings');\n\nfunction ApiError(code, message) {\n  let err = new Error(message);\n  err.code = code;\n  err._isApiError = true;\n  return err;\n}\n\nlet API_BASE_URL = 'http://' + config.api.host;\nif (config.api.port) {\n  API_BASE_URL += ':' + config.api.port;\n}\nAPI_BASE_URL += '/--/api/';\n// const API_BASE_URL = 'http://localhost:3000/--/api/';\n\nexport default class ApiClient {\n\n  static async callMethodAsync(methodName, args) {\n    let url = API_BASE_URL + encodeURIComponent(methodName) + '/' +\n      encodeURIComponent(JSON.stringify(args));\n\n    let clientId = await session.clientIdAsync();\n    let {username} = await userSettings.readAsync();\n    let headers = {\n      'Exp-ClientId': clientId,\n    };\n    if (username) {\n      headers['Exp-Username'] = username;\n    }\n\n    // console.log(\"headers=\", headers);\n\n    let response = await request.promise.get(url, {headers});\n    let body = response.body;\n    var responseObj;\n    try {\n      responseObj  = JSON.parse(body);\n    } catch (e) {\n      throw new Error(\"Invalid JSON returned from API: \" + e);\n    }\n    if (responseObj.err) {\n      let err = ApiError(responseObj.code || 'API_ERROR', \"API Response Error: \" + responseObj.err);\n      err.serverError = responseObj.err;\n      throw err;\n    } else {\n      return responseObj;\n    }\n  }\n}\n\nApiClient.host = config.api.host;\nApiClient.port = config.api.port || 80;\n"],"sourceRoot":"/source/"}