{"version":3,"sources":["application/packager.js"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC7C,IAAI,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC9C,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;IAE/B,kBAAkB;AACX,WADP,kBAAkB,CACV,IAAI,EAAE;;;0BADd,kBAAkB;;AAEpB,WAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;;AAE1C,QAAI,YAAY,GAAG;AACjB,UAAI,EAAE,SAAS;AACf,kBAAY,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,gDAAgD,CAAC;AAChG,oBAAc,EAAE,UAAU;KAC3B,CAAC;;AAEF,QAAI,CAAC,IAAI,GAAG,eAAc,YAAY,EAAE,IAAI,CAAC,CAAC;AAC9C,QAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAI,CAAC,cAAc,GAAG,aAAY,UAAC,OAAO,EAAE,MAAM,EAAK;AACrD,YAAK,qBAAqB,GAAG,OAAO,CAAC;AACrC,YAAK,oBAAoB,GAAG,MAAM,CAAC;KACpC,CAAC,CAAC;GAEJ;;eAjBG,kBAAkB;;WAmBjB,iBAAG;AACN,YAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;KAC9D;;;6BAEe,aAAG;;AAEjB,aAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;;AAE1B,UAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;AAClC,UAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACnB,YAAI,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,aAAa,CAAC,KAAK,CAAC,CAAC;OAC7C;;AAED,UAAI,CAAC,SAAS,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EACzD,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,GAAG,IAAI,EAAE,eAAe,GAAG,IAAI,CAAE,EAAE;;AAEvE,aAAK,EAAE,SAAS;AAChB,gBAAQ,EAAE,KAAK;OAChB,CAAC,CAAC;;AAEL,aAAO,IAAI,CAAC;KACb;;;6BAEgB,WAAC,IAAI,EAAE;AACtB,aAAO,QAAQ,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC/C;;;SA5CG,kBAAkB;;;AAgDxB,MAAM,CAAC,OAAO,GAAG;AACf,oBAAkB,EAAlB,kBAAkB;CACnB,CAAC","file":"application/packager.js","sourcesContent":["let child_process = require('child_process');\nlet freeportAsync = require('freeport-async');\nlet path = require('path');\n\nlet urlUtils = require('./urlUtils');\n\nclass PackagerController {\n  constructor(opts) {\n    console.log(\"Created PackagerController\");\n\n    let DEFAULT_OPTS = {\n      port: undefined,\n      packagerPath: path.join(__dirname, '..', '..', 'node_modules/react-native/packager/packager.sh'),\n      mainModulePath: 'index.js',\n    };\n\n    this.opts = Object.assign(DEFAULT_OPTS, opts);\n    this._givenOpts = opts;\n    this.packagerReady$ = new Promise((fulfill, reject) => {\n      this._packagerReadyFulfill = fulfill;\n      this._packagerReadyReject = reject;\n    });\n\n  }\n\n  start() {\n    throw new Error(\"Use `.startAsync()` instead of `.start()`\");\n  }\n\n  async startAsync() {\n\n    console.log(\"startAsync\");\n\n    let root = this.opts.absolutePath;\n    if (!this.opts.port) {\n      this.opts.port = await freeportAsync(19000);\n    }\n\n    this._packager = child_process.spawn(this.opts.packagerPath,\n      [\"--port=\" + this.opts.port, \"--root=\" + root, \"--assetRoots=\" + root,], {\n        // stdio: [process.stdin, 'pipe', process.stderr],\n        stdio: 'inherit',\n        detached: false,\n      });\n\n    return this;\n  }\n\n  async getUrlAsync(opts) {\n    return urlUtils.constructUrlAsync(this, opts);\n  }\n\n}\n\nmodule.exports = {\n  PackagerController,\n};\n"],"sourceRoot":"/source/"}