{"version":3,"sources":["application/simulator.js"],"names":[],"mappings":";;;;IAIe,yBAAyB,qBAAxC,aAA2C;AACzC,MAAI,MAAM,YAAA,CAAC;AACX,MAAI;AACF,UAAM,GAAG,CAAC,MAAM,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC,CAAA,CAAE,IAAI,EAAE,CAAC;GACjF,CAAC,OAAO,CAAC,EAAE;AACV,WAAO,CAAC,KAAK,CAAC,iGAAiG,EAAE,CAAC,CAAC,CAAC;AACpH,WAAO,KAAK,CAAC;GACd;AACD,MAAI,MAAM,KAAK,2BAA2B,EAAE;AAC1C,WAAO,IAAI,CAAC;GACb,MAAM;AACL,WAAO,CAAC,IAAI,CAAC,+CAA+C,GAAG,MAAM,GAAG,6BAA6B,CAAC,CAAC;AACvG,WAAO,KAAK,CAAC;GACd;CACF;;IAEc,kBAAkB,qBAAjC,aAAoC;AAClC,SAAO,MAAM,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;CACtD;;IAEc,0BAA0B,qBAAzC,WAA0C,SAAS,EAAE;AACnD,SAAO,MAAM,UAAU,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;CAC9E;;IAEc,uBAAuB,qBAAtC,aAAyC;AACvC,MAAI,WAAW,GAAG,CAAC,MAAM,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,uEAAuE,CAAC,CAAC,CAAA,CAAE,IAAI,EAAE,CAAC;;AAEzI,SAAQ,WAAW,KAAK,GAAG,CAAE;CAC9B;;IAEc,+BAA+B,qBAA9C,aAAiD;AAC/C,SAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,sCAAsC,CAAC,CAAC;CACxE;;IAEc,+BAA+B,qBAA9C,aAAiD;AAC/C,MAAI,eAAe,GAAG,MAAM,+BAA+B,EAAE,CAAC;AAC9D,SAAO,MAAM,0BAA0B,CAAC,eAAe,CAAC,CAAC;CAC1D;;IAEc,uBAAuB,qBAAtC,WAAuC,GAAG,EAAE;AAC1C,SAAO,MAAM,UAAU,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;CACxE;;AA7CD,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACtC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,UAAU,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;;AA6ClD,MAAM,CAAC,OAAO,GAAG;AACf,iCAA+B,EAA/B,+BAA+B;AAC/B,2BAAyB,EAAzB,yBAAyB;AACzB,yBAAuB,EAAvB,uBAAuB;AACvB,oBAAkB,EAAlB,kBAAkB;AAClB,yBAAuB,EAAvB,uBAAuB;AACvB,iCAA+B,EAA/B,+BAA+B;CAChC,CAAC","file":"application/simulator.js","sourcesContent":["let execAsync = require('exec-async');\nlet path = require('path');\nlet spawnAsync = require('@exponent/spawn-async');\n\nasync function isSimulatorInstalledAsync() {\n  let result;\n  try {\n    result = (await execAsync('osascript', ['-e', 'id of app \"Simulator\"'])).trim();\n  } catch (e) {\n    console.error(\"Can't determine id of Simulator app; the Simulator is most likely not installed on this machine\", e);\n    return false;\n  }\n  if (result === 'com.apple.iphonesimulator') {\n    return true;\n  } else {\n    console.warn(\"Simulator is installed but is identified as '\" + result + \"'; don't know what that is.\");\n    return false;\n  }\n}\n\nasync function openSimulatorAsync() {\n  return await spawnAsync('open', ['-a', 'Simulator']);\n}\n\nasync function installAppOnSimulatorAsync(pathToApp) {\n  return await spawnAsync('xcrun', ['simctl', 'install', 'booted', pathToApp]);\n}\n\nasync function isSimulatorRunningAsync() {\n  let zeroMeansNo = (await execAsync('osascript', ['-e', 'tell app \"System Events\" to count processes whose name is \"Simulator\"'])).trim();\n  // console.log(\"zeroMeansNo=\", zeroMeansNo);\n  return (zeroMeansNo !== '0');\n}\n\nasync function pathToExponentSimulatorAppAsync() {\n  return path.resolve(__dirname, '../../SimulatorApps/1.0/Exponent.app');\n}\n\nasync function installExponentOnSimulatorAsync() {\n  let exponentAppPath = await pathToExponentSimulatorAppAsync();\n  return await installAppOnSimulatorAsync(exponentAppPath);\n}\n\nasync function openUrlInSimulatorAsync(url) {\n  return await spawnAsync('xcrun', ['simctl', 'openurl', 'booted', url]);\n}\n\nmodule.exports = {\n  installExponentOnSimulatorAsync,\n  isSimulatorInstalledAsync,\n  isSimulatorRunningAsync,\n  openSimulatorAsync,\n  openUrlInSimulatorAsync,\n  pathToExponentSimulatorAppAsync,\n};\n"],"sourceRoot":"/source/"}