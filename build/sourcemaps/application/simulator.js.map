{"version":3,"sources":["application/simulator.js"],"names":[],"mappings":"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","file":"application/simulator.js","sourcesContent":["let existsAsync = require('exists-async');\nlet download = require('download');\nlet fs = require('fs');\nlet http = require('http');\nlet instapromise = require('instapromise');\nlet jsonFile = require('@exponent/json-file');\nlet md5hex = require('md5hex');\nlet path = require('path');\nlet osascript = require('@exponent/osascript');\nlet spawnAsync = require('@exponent/spawn-async');\n\nlet Api = require('./Api');\nlet metadata = require('./metadata');\nlet userSettings = require('./userSettings');\n\nasync function isSimulatorInstalledAsync() {\n  let result;\n  try {\n    result = (await osascript.execAsync('id of app \"Simulator\"')).trim();\n  } catch (e) {\n    console.error(\"Can't determine id of Simulator app; the Simulator is most likely not installed on this machine\", e);\n    return false;\n  }\n  if (result === 'com.apple.iphonesimulator') {\n    return true;\n  } else {\n    console.warn(\"Simulator is installed but is identified as '\" + result + \"'; don't know what that is.\");\n    return false;\n  }\n}\n\nasync function openSimulatorAsync() {\n  return await spawnAsync('open', ['-a', 'Simulator']);\n}\n\nasync function installAppOnSimulatorAsync(pathToApp) {\n  return await spawnAsync('xcrun', ['simctl', 'install', 'booted', pathToApp]);\n}\n\nasync function isSimulatorRunningAsync() {\n  let zeroMeansNo = (await osascript.execAsync('tell app \"System Events\" to count processes whose name is \"Simulator\"')).trim();\n  // console.log(\"zeroMeansNo=\", zeroMeansNo);\n  return (zeroMeansNo !== '0');\n}\n\nasync function pathToExponentSimulatorAppDirAsync() {\n  return path.resolve(__dirname, '../../SimulatorApps/1.1.0/');\n}\n\nasync function pathToExponentSimulatorAppAsync() {\n  let versionInfo = await metadata.reactNativeVersionInfoAsync();\n  let versionPair = [versionInfo.versionDescription, versionInfo.versionSpecific];\n  let pkgJson = jsonFile(path.resolve(__dirname, '../../package.json'));\n  let version = await pkgJson.getAsync('dependencies.react-native');\n  return await simulatorAppForReactNativeVersionAsync(versionPair)\n  // return path.join(await pathToExponentSimulatorAppDirAsync(), 'Exponent.app');\n}\n\nasync function installExponentOnSimulatorAsync() {\n  let exponentAppPath = await pathToExponentSimulatorAppAsync();\n  return await installAppOnSimulatorAsync(exponentAppPath);\n}\n\nasync function openUrlInSimulatorAsync(url) {\n  return await spawnAsync('xcrun', ['simctl', 'openurl', 'booted', url]);\n}\n\nasync function simulatorAppForReactNativeVersionAsync(versionPair) {\n  // Will download -- if necessary -- and then return the path to the simulator\n\n  let p = simulatorAppPathForReactNativeVersion(versionPair);\n  // console.log(\"path=\", p);\n  if (await existsAsync(p)) {\n    return p;\n  } else {\n    console.log(\"No simulator app for react-native version \" + versionPair + \" so downloading now\");\n\n    let response = await Api.callMethodAsync('simulator.urlForSimulatorAppForReactNativeVersion', []);\n    let remoteUrl = response.result;\n\n    let dir = simulatorAppDirectoryForReactNativeVersion(versionPair);\n    let d$ = new download({extract: true}).get(remoteUrl).dest(dir).promise.run();\n    await d$;\n    return p;\n  }\n\n}\n\nfunction simulatorCacheDirectory() {\n  let dotExponentDirectory = userSettings.dotExponentDirectory();\n  return path.join(dotExponentDirectory, 'simulator-app-cache');\n}\n\nfunction _escapeForFilesystem(s) {\n  let sStripped = s.replace(/[^0-9a-zA-Z]/g, '');\n  let full = sStripped + '-' + md5hex(s, 8);\n  // console.log(\"full=\", full);\n  return full;\n}\n\nfunction _strip(s) {\n  return s.replace(/[^0-9a-zA-Z]/g, '');\n}\n\nfunction _escapeForFilesystem(list) {\n  let hash = md5hex(JSON.stringify(list), 8);\n  return list.map(_strip).join('.') + '-' + hash;\n}\n\nfunction simulatorAppPathForReactNativeVersion(versionPair) {\n  return path.join(simulatorAppDirectoryForReactNativeVersion(versionPair), 'Exponent.app');\n}\n\nfunction simulatorAppDirectoryForReactNativeVersion(versionPair) {\n  // console.log(\"version=\", version);\n  return path.join(simulatorCacheDirectory(), _escapeForFilesystem(versionPair));\n}\n\nmodule.exports = {\n  _escapeForFilesystem,\n  installExponentOnSimulatorAsync,\n  isSimulatorInstalledAsync,\n  isSimulatorRunningAsync,\n  openSimulatorAsync,\n  openUrlInSimulatorAsync,\n  pathToExponentSimulatorAppAsync,\n  simulatorCacheDirectory,\n  simulatorAppForReactNativeVersionAsync,\n};\n"],"sourceRoot":"/source/"}