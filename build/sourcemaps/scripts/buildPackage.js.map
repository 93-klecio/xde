{"version":3,"sources":["scripts/buildPackage.js"],"names":[],"mappings":"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","file":"scripts/buildPackage.js","sourcesContent":["let child_process = require('child_process');\nlet crayon = require('@ccheever/crayon');\nlet jsonFile = require('@exponent/json-file');\nlet minimist = require('minimist');\nlet path = require('path');\nlet spawnAsync = require('@exponent/spawn-async');\n\nlet dotApp = require('./lib/dotApp');\nlet {\n  APP_NAME,\n  XDE_ROOT,\n} = dotApp;\n\nlet PLATFORM = 'darwin';\nlet ARCH = 'x64';\n\nfunction getAppRoot() {\n  return path.join(getAppDir(), APP_NAME + '.app');\n}\n\nfunction getAppDir() {\n  return path.join(XDE_ROOT, APP_NAME + '-' + PLATFORM + '-' + ARCH);\n}\n\nfunction copyIconsSync() {\n  let appRoot = getAppRoot();\n  dotApp.copyIconsSync(appRoot);\n  crayon.green.log(\"Updated icons to use Exponent\");\n}\n\nasync function buildPackageAsync(opts) {\n  // electron-packager ./ 'Exponent XDE' --platform=darwin --arch=x64 --version=0.31.2 --prune\n  let electronPackager = path.join(XDE_ROOT, 'node_modules', '.bin', 'electron-packager');\n  let electronPackageJsonFile = jsonFile(path.join(XDE_ROOT, 'node_modules', 'electron-prebuilt', 'package.json'));\n  let electronVersion = await electronPackageJsonFile.getAsync('version');\n  let iconPath = path.join(XDE_ROOT, 'dev', 'Design', 'xde.icns');\n  let args = ['./', APP_NAME, '--platform=' + PLATFORM, '--arch=' + ARCH, '--version=' + electronVersion, '--prune', '--overwrite', '--icon=' + iconPath];\n  if (opts && opts.signed) {\n    args.push('--sign=Developer ID Application: 650 Industries, Inc. (C8D8QTF339)');\n  }\n  // console.log(\"args=\", args);\n  return await spawnAsync(electronPackager, args, {stdio: 'inherit'});\n}\n\nasync function runAsync(opts) {\n\n  // Make sure we are using an OK Node version\n  dotApp.checkNodeVersion();\n\n  await buildPackageAsync(opts);\n  crayon.green.log(\"Bundled up Electron app\");\n  // The --icon option handles this now\n  // copyIconsSync();\n  await compressAsync(getAppRoot());\n  crayon.green.log(\"Building package complete.\");\n  return true;\n}\n\nasync function compressAsync(appRoot) {\n  let appDir = getAppDir();\n  await spawnAsync('zip', ['-r', APP_NAME + '.zip', APP_NAME + '.app'], {stdio: 'inherit', cwd: appDir});\n  crayon.green.log(\"Compressed app into .zip archive\");\n  return true;\n}\n\nif (require.main === module) {\n  let args = minimist(process.argv);\n  let opts = {};\n  if (args.signed) {\n    opts.signed = true;\n  }\n  runAsync(opts).then(console.log, console.error);\n}\n\nmodule.exports = {\n  buildPackageAsync,\n  compressAsync,\n  copyIconsSync,\n};\n"],"sourceRoot":"/source/"}