{"version":3,"sources":["web/App.js"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7B,IAAI,QAAQ,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;;AAE7C,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACzC,IAAI,eAAe,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;AAEnD,IAAI,MAAM,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AACnD,IAAI,aAAa,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;;IAG3D,GAAG;YAAH,GAAG;;AAEI,WAFP,GAAG,GAEO;0BAFV,GAAG;;AAGL,+BAHE,GAAG,6CAGG;AACR,QAAI,CAAC,KAAK,GAAG;AACX,wBAAkB,EAAE,IAAI;KACzB,CAAA;GACF;;wBAPG,GAAG;;WASD,kBAAG;;AAEP,aACE;;;QACG,IAAI,CAAC,cAAc,EAAE;QAEtB,oBAAC,eAAe,IAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,AAAC,GAAG;OAClE,CACN;KAEH;;;WAEa,0BAAG;AACf,aACE;AAAC,qBAAa;;QACZ;AAAC,gBAAM;YAAC,MAAM,EAAC,QAAQ,EAAC,MAAM,MAAA,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,AAAC;;SAAa;QACtE;AAAC,gBAAM;YAAC,MAAM,EAAC,QAAQ,EAAC,MAAM,MAAA;;SAAc;QAC5C;AAAC,gBAAM;YAAC,MAAM,EAAC,QAAQ,EAAC,MAAM,MAAA;;SAA0B;QACxD;AAAC,gBAAM;YAAC,MAAM,EAAC,QAAQ,EAAC,MAAM,MAAA;;SAAmB;OAMnC,CAChB;KACH;;;iBAEA,QAAQ;WACE,uBAAG;AACZ,cAAQ,OAAI,EAAE,CAAC;KAChB;;;iBAEA,QAAQ;WACG,wBAAG;AACb,cAAQ,CAAC,IAAI,EAAE,CAAC;KACjB;;;WAEgB,6BAAG;;;AAElB,UAAI,WAAW,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;;AAErD,iBAAW,CAAC,QAAQ,CAAC;AACnB,YAAI,EAAE,iCAAiC;OACxC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,EAAE,EAAK;AAClB,cAAK,QAAQ,CAAC,EAAC,kBAAkB,EAAE,EAAE,EAAC,CAAC,CAAC;AACxC,UAAE,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;OAEnD,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;;;;;;;KASrC;;;SAlEG,GAAG;GAAS,KAAK,CAAC,SAAS;;AAoEhC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","file":"web/App.js","sourcesContent":["let React = require('react');\n\nlet autobind = require('autobind-decorator');\n\nlet Commands = require('./Commands');\nlet MainMenu = require('./MainMenu');\nlet NgrokPanel = require('./NgrokPanel');\nlet PackagerConsole = require('./PackagerConsole');\n\nlet Button = require('react-bootstrap/lib/Button');\nlet ButtonToolbar = require('react-bootstrap/lib/ButtonToolbar');\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      packagerController: null,\n    }\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this._renderButtons()}\n\n        <PackagerConsole packagerController={this.state.packagerController} />\n      </div>\n    );\n\n  }\n\n  _renderButtons() {\n    return (\n      <ButtonToolbar>\n        <Button bsSize='medium' active onClick={this._newClicked}>New</Button>\n        <Button bsSize='medium' active>Open</Button>\n        <Button bsSize='medium' active>Restart Packager</Button>\n        <Button bsSize='medium' active>Send Link</Button>\n        {/*\n        <Button bsSize='medium' active>Button</Button>\n        <Button bsStyle='primary' bsSize='medium' active>Primary button</Button>\n        <Button bsSize='medium' active>Button</Button>\n        */}\n      </ButtonToolbar>\n    );\n  }\n\n  @autobind\n  _newClicked() {\n    Commands.new();\n  }\n\n  @autobind\n  _openClicked() {\n    Commands.open();\n  }\n\n  componentDidMount() {\n\n    let runPackager = require('../commands/runPackager');\n    // let runPackager = require('remote').require('../build/commands/runPackager');\n    runPackager.runAsync({\n      root: '/Users/ccheever/tmp/icecubetray',\n    }, {}).then((pc) => {\n      this.setState({packagerController: pc});\n      pc.getUrlAsync().then(console.log, console.error);\n\n    }).then(console.log, console.error);\n\n\n    // this.props.emitter.on('setPackagerController', (pc) => {\n    //   this.setState({packagerController: pc});\n    // });\n    //\n    // this.props.emitter.emit('ready', this);\n\n  }\n\n};\n\nmodule.exports = App;\n"],"sourceRoot":"/source/"}