{"version":3,"sources":["web/App.js"],"names":[],"mappings":"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","file":"web/App.js","sourcesContent":["let React = require('react');\n\nlet autobind = require('autobind-decorator');\n\nlet Commands = require('./Commands');\nlet MainMenu = require('./MainMenu');\nlet NgrokPanel = require('./NgrokPanel');\nlet PackagerConsole = require('./PackagerConsole');\n\nlet Button = require('react-bootstrap/lib/Button');\nlet ButtonToolbar = require('react-bootstrap/lib/ButtonToolbar');\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      packagerController: null,\n      packagerLogs: '',\n      packagerErrors: '',\n    }\n\n    this._packagerLogs = '';\n    this._packageErrors = '';\n    global._App = this;\n  }\n\n  _renderPackagerConsole() {\n\n    let logStyle = {\n      width: '50%',\n      fontFamily: ['Menlo', 'Courier', 'monospace'],\n      fontSize: 11,\n      flex: 1,\n      height: 300,\n    };\n\n    return (\n      <div>\n        <div style={{width: '100%', background: 'red',}}>\n          <span style={{\n              width: '50%',\n          }}>Packger Logs</span>\n          <span stlye={{\n              width: '50%',\n          }}>Packager Errors</span>\n\n        </div>\n        <div style={{width: '100%', display: 'flex', flexDirection: 'row', }}>\n\n          <textarea\n            ref=\"packagerLogs\"\n            readOnly\n            key=\"packagerLogs\"\n            style={logStyle} value={this.state.packagerLogs}\n            controlled\n          />\n\n          <textarea\n            readOnly\n            key=\"packagerErrors\"\n            ref=\"packagerErrors\"\n            style={Object.assign({}, logStyle, {color: 'red'})}\n            value={this.state.packagerErrors}\n            controlled\n          />\n\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this._renderButtons()}\n        {this._renderPackagerConsole()}\n      </div>\n    );\n\n  }\n\n  _renderButtons() {\n    return (\n      <ButtonToolbar>\n        <Button bsSize='medium' active onClick={this._newClicked}>New</Button>\n        <Button bsSize='medium' active>Open</Button>\n        <Button bsSize='medium' active onClick={this._restartPackagerClicked}>Restart Packager</Button>\n        <Button bsSize='medium' active>Restart ngrok</Button>\n        <Button bsSize='medium' active>Send Link</Button>\n        <Button bsSize='medium' active>Publish</Button>\n        {/*\n        <Button bsSize='medium' disabled style={{\n            background: 'green',\n        }}>Packager Active</Button>\n        <Button bsSize='medium' active>Button</Button>\n        <Button bsStyle='primary' bsSize='medium' active>Primary button</Button>\n        <Button bsSize='medium' active>Button</Button>\n        */}\n      </ButtonToolbar>\n    );\n  }\n\n  @autobind\n  _newClicked() {\n    Commands.new();\n  }\n\n  @autobind\n  _restartPackagerClicked() {\n    if (this.state.packagerController) {\n      console.log(\"Restarting packager...\");\n      this.state.packagerController.startOrRestartPackagerAsync().then(() => {\n        console.log(\"Packager restarted :)\");\n      }, (err) => {\n        console.error(\"Failed to restart packager :(\");\n      });\n    } else {\n      console.error(\"No packager to restart!\");\n    }\n  }\n\n  @autobind\n  _openClicked() {\n    Commands.open();\n  }\n\n  @autobind\n  _appendPackagerLogs(data) {\n    this._packagerLogs = this._packagerLogs + data;\n    this.setState({packagerLogs: this._packagerLogs});\n    this._scrollPackagerLogsToBottom();\n  }\n\n  @autobind\n  _appendPackagerErrors(data) {\n    this._packagerErrors = this._packagerErrors + data;\n    this.setState({packagerErrors: this._packagerErrors});\n    this._scrollPackagerErrorsToBottom();\n  }\n\n  @autobind\n  _scrollPackagerLogsToBottom() {\n    let ta = React.findDOMNode(this.refs.packagerLogs);\n    ta.scrollTop = ta.scrollHeight;\n  }\n\n  @autobind\n  _scrollPackagerErrorsToBottom() {\n    let ta = React.findDOMNode(this.refs.packagerErrors);\n    ta.scrollTop = ta.scrollHeight;\n  }\n\n  componentDidMount() {\n\n    let runPackager = require('../commands/runPackager');\n    // let runPackager = require('remote').require('../build/commands/runPackager');\n    runPackager.runAsync({\n      root: '/Users/ccheever/tmp/icecubetray',\n    }, {}).then((pc) => {\n      this._packagerController = pc;\n      pc.on('stdout', this._appendPackagerLogs);\n\n      pc.on('stderr', this._appendPackagerErrors);\n\n      this.setState({packagerController: pc});\n      pc.startAsync();\n\n    }).then(console.log, console.error);\n\n  }\n\n};\n\nmodule.exports = App;\n"],"sourceRoot":"/source/"}