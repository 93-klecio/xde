{"version":3,"sources":["web/Commands.js"],"names":[],"mappings":"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","file":"web/Commands.js","sourcesContent":["\nasync function showOpenDialog(opts) {\n  return new Promise((fulfill, reject) => {\n    let dialog = require('remote').require('dialog');\n    dialog.showOpenDialog(opts, function (selections) {\n      fulfill(selections);\n    });\n  });\n}\n\nmodule.exports = {\n\n  newExpAsync: async function () {\n\n    let dialog = require('remote').require('dialog');\n    let selections = await showOpenDialog({\n      properties: ['openDirectory', 'createDirectory'],\n    });\n\n    if (selections == null) {\n      console.log(\"No selections; cancelled New Exp\");\n    }\n\n    let selection = selections[0];\n\n    let env = {\n      root: selection,\n    };\n\n    let init = require('remote').require('./build/commands/init');\n    let result = init.runAsync(env, {});\n\n    return env;\n\n  },\n\n  openExpAsync: async function () {\n    let dialog = require('remote').require('dialog');\n    let selections = await showOpenDialog({\n      properties: ['openDirectory'],\n    });\n\n    console.log(\"zzz\");\n\n    if (selections == null) {\n      console.log(\"No selections; cancelled Open Exp\");\n    }\n\n    let selection = selections[0];\n\n    console.log(\"selection=\" + selection);\n\n    let env = {\n      root: selection,\n    };\n    return env;\n  },\n\n  new: function () {\n    console.log(\"New\");\n    require('remote').require('dialog').showOpenDialog({\n      properties: ['openDirectory', 'createDirectory'],\n    }, function (fileNames) {\n\n      if (fileNames == null) {\n        console.log(\"New article cancelled\");\n        return;\n      }\n\n      let fileName = fileNames[0];\n\n      let env = {\n        root: fileName,\n      };\n\n      let init = require('remote').require('./build/commands/init');\n      init.runAsync(env, {}).then(() => {\n        console.log(\"Successfully created a new project\");\n        let runPackager = require('remote').require('./build/commands/runPackager');\n        runPackager.runAsync(env, {}).then(() => {\n          console.log(\"Successfully started packager\");\n\n          // Close this window since we don't need it anymore\n          require('remote').getCurrentWindow().close();\n\n        }, (err) => {\n          console.error(\"Failed to start packager\");\n          console.error(err);\n          // TODO: Show an error message to the user\n        });\n      }, (err) => {\n        console.error(\"Didn't initialize!\");\n        console.error(err.message);\n        // TODO: Show an error message to the user\n      });\n    });\n\n  },\n\n  open: function () {\n    console.log(\"Open\");\n    require('remote').require('dialog').showOpenDialog({\n      properties: ['openDirectory'],\n    }, (selections) => {\n\n      if (!selections) {\n        console.log(\"No directory selected\");\n        return;\n      }\n\n      let selection = selections[0];\n      let env = {\n        root: selection,\n      };\n      let runPackager = require('remote').require('./build/commands/runPackager');\n      runPackager.runAsync(env, {}).then((pc) => {\n        console.log(\"runAsync complete\");\n        let url = pc.getUrlAsync();\n        console.log(url);\n      });\n    });\n  },\n\n\n\n};\n"],"sourceRoot":"/source/"}