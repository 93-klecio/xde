{"version":3,"sources":["web/FileSystemControls.js"],"names":[],"mappings":"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","file":"web/FileSystemControls.js","sourcesContent":["let React = require('react');\n\nlet autobind = require('autobind-decorator');\nlet escapeHtml = require('escape-html');\nlet execAsync = require('exec-async');\nlet gitInfoAsync = require('git-info-async');\nlet jsonFile = require('@exponent/json-file');\nlet path = require('path');\n\nlet Api = require('../application/Api');\nlet config = require('../config');\nlet Commands = require('./Commands');\nlet Exp = require('../application/Exp');\nlet fileSystem = require('../application/fileSystem');\nlet LoginPane = require('./LoginPane');\nlet Menu = require('../application/Menu');\nlet NewVersionAvailable = require('./NewVersionAvailable');\nlet OverlayTooltip = require('./OverlayTooltip');\nlet StyleConstants = require('./StyleConstants');\nlet simulator = require('../application/simulator');\nlet urlUtils = require('../application/urlUtils');\nlet userSettings = require('../application/userSettings');\n\nlet Button = require('react-bootstrap/lib/Button');\nlet ButtonGroup = require('react-bootstrap/lib/ButtonGroup');\nlet ButtonToolbar = require('react-bootstrap/lib/ButtonToolbar');\n\nclass FileSystemControls extends React.Component {\n  render() {\n\n    let buttonSpacing = 25;\n    return (\n      <div style={Object.assign({}, styles.bar, this.props.style)}>\n        <ButtonToolbar>\n          <OverlayTooltip tooltip=\"This will open a Finder window at the root of your project\">\n            <Button style={{marginRight: buttonSpacing,}} onClick={this._showProjectInFinder}>Show Project in Finder</Button>\n          </OverlayTooltip>\n          <OverlayTooltip tooltip=\"This will open an iTerm or Terminal window cd-ed to the root directory of your project\">\n            <Button style={{marginRight: buttonSpacing,}} onClick={this._openProjectFolderInTerminal}>Open Project Folder in Terminal</Button>\n          </OverlayTooltip>\n          <OverlayTooltip tooltip=\"This will open your project in a text editor. It will try to guess what editor you are using by looking at popular text editors that you have open and/or installed (ex. Atom, Sublime Text, TextWrangler, Text Mate, etc.)\">\n            <Button onClick={this._openProjectInEditor}>Open Project in Editor</Button>\n          </OverlayTooltip>\n        </ButtonToolbar>\n      </div>\n    );\n  }\n\n  @autobind\n  _showProjectInFinder() {\n    let dir = this._dir();\n    console.log(\"dir=\", dir);\n    fileSystem.openFinderToFolderAsync(this._dir()).catch((err) => {\n      console.error(err);\n    });\n  }\n\n  @autobind\n  _openProjectFolderInTerminal() {\n    fileSystem.openFolderInItermOrTerminalAsync(this._dir()).catch((err) => {\n      console.error(err);\n    });\n  }\n\n  @autobind\n  _openProjectInEditor() {\n    fileSystem.openProjectInEditorAsync(this._dir()).catch((err) => {\n      console.error(err);\n    });\n  }\n\n  _dir() {\n    return this.props.packagerController.opts.absolutePath;\n  }\n\n}\n\nlet styles = {\n  bar: {\n    marginLeft: 15,\n    marginTop: 2,\n    marginBottom: 6,\n  },\n};\n\nmodule.exports = FileSystemControls;\n"],"sourceRoot":"/source/"}