{"version":3,"sources":["web/LoginPane.js"],"names":[],"mappings":"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","file":"web/LoginPane.js","sourcesContent":["let React = require('react');\n\nlet Button = require('react-bootstrap/lib/Button');\nlet ButtonInput = require('react-bootstrap/lib/ButtonInput');\nlet Input = require('react-bootstrap/lib/Input');\n\nlet Api = require('../application/Api');\nlet login = require('../application/login');\n\nlet autobind = require('autobind-decorator');\n\nclass LoginPane extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loggedInAs: null,\n      username: null,\n      password: null,\n    };\n\n    global._LoginPane = this;\n\n  }\n\n  render() {\n    return (\n      <div style={Object.assign({}, Styles.pane, {\n          paddingLeft: 12,\n          paddingRight: 12,\n          paddingBottom: 6,\n          paddingTop: 6,\n      })}>\n      {this.state.loggedInAs ? this._renderLoggedIn() : this._renderLoggedOut()}\n      {this._renderErrors()}\n      </div>\n    );\n  }\n\n  @autobind\n  _renderErrors() {\n    if (this.state.errorMessage) {\n      return (\n        <div style={{\n            color: 'red',\n            fontSize: 13,\n            fontWeight: '600',\n            fontFamily: 'Helvetica Neue',\n            textAlign: 'center',\n            maxWidth: 250,\n        }}><small>{this.state.errorMessage}</small></div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  @autobind\n  _renderLoggedIn() {\n    return (\n      <div>\n        <div style={{paddingTop: 5}}>{this.state.loggedInAs.username}</div>\n        <Button bsSize=\"small\" style={{\n            marginTop: 5,\n            alignSelf: 'center',\n        }} onClick={this._logoutClicked}\n        >Logout</Button>\n    </div>\n\n    );\n  }\n\n  @autobind\n  _renderLoggedOut() {\n    return (\n      <div>\n        <form name=\"login\" onSubmit={(e) => {\n            e.preventDefault();\n            this._loginSubmitted();\n        }}>\n          <div><Input type=\"text\" bsSize=\"small\" style={Styles.input} ref=\"username\" onChange={(event) => {\n              this.setState({username: event.target.value});\n          }} placeholder=\"username\" /></div>\n          <div><Input type=\"password\" bsSize=\"small\" style={Styles.input} ref=\"password\" onChange={(event) => {\n            this.setState({password: event.target.value});\n          }} placeholder=\"password\" /></div>\n          <Input type='submit' bsSize=\"small\" value='Login or Create Account' />\n        </form>\n      </div>\n    );\n  }\n\n  @autobind\n  _logoutClicked() {\n    console.log(\"logout clicked\");\n    login.logoutAsync().then(() => {\n      console.log(\"logout successful\");\n      this.setState({loggedInAs: null, errorMessage: null});\n      if (this.props.onLogout) {\n        this.props.onLogout();\n      }\n    }, (err) => {\n      console.error(\"logout error:\", err);\n      this.setState({errorMessage: err.message});\n    });\n  }\n\n  @autobind\n  _loginSubmitted() {\n    console.log(\"login clicked\");\n    login.loginOrAddUserAsync({\n      username: this.state.username,\n      password: this.state.password,\n    }).then((result) => {\n      console.log(\"login successful\");\n      this.setState({\n        errorMessage: null,\n        loggedInAs: result.user,\n      });\n      if (this.props.onLogin) {\n        this.props.onLogin(result.user);\n      }\n    }, (err) => {\n      console.error(\"login error:\", err);\n      this.setState({errorMessage: err.message});\n      console.error(err);\n    });\n    // console.log(\"username=\", this.state.username, \"password=\", this.state.password);\n\n  }\n\n  componentDidMount() {\n    Api.callMethodAsync('whoami', []).then((result) => {\n      this.setState({loggedInAs: result.user});\n      if (result.user && this.props.onLogin) {\n        this.props.onLogin(result.user);\n      }\n    }, (err) => {\n      this.setState({errorMessage: err.message});\n    });\n  }\n\n}\n\nlet Styles = {\n  pane: {\n    backgroundColor: '#eeeeee',\n    boxShadow: '0 0 10px 0 rgba(0, 0, 0, 0.3)',\n  },\n  input: {\n    // borderRadius: 3,\n    // width: 200,\n    // fontFamily: ['Verdana', 'Helvetica Neue', 'Verdana', 'Helvetica', 'Arial', 'Sans-serif'],\n    // fontSize: 11,\n    // fontWeight: '200',\n  },\n  submit: {\n    // borderRadius: 3,\n    // width: 200,\n  },\n};\n\nmodule.exports = LoginPane;\n"],"sourceRoot":"/source/"}