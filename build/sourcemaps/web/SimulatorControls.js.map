{"version":3,"sources":["web/SimulatorControls.js"],"names":[],"mappings":"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","file":"web/SimulatorControls.js","sourcesContent":["let React = require('react');\n\nlet autobind = require('autobind-decorator');\nlet escapeHtml = require('escape-html');\nlet execAsync = require('exec-async');\nlet gitInfoAsync = require('git-info-async');\nlet jsonFile = require('@exponent/json-file');\nlet path = require('path');\n\nlet Api = require('../application/Api');\nlet config = require('../config');\nlet Commands = require('./Commands');\nlet Exp = require('../application/Exp');\nlet LoginPane = require('./LoginPane');\nlet NewVersionAvailable = require('./NewVersionAvailable');\nlet StyleConstants = require('./StyleConstants');\nlet simulator = require('../application/simulator');\nlet urlUtils = require('../application/urlUtils');\nlet userSettings = require('../application/userSettings');\n\nlet Button = require('react-bootstrap/lib/Button');\nlet ButtonGroup = require('react-bootstrap/lib/ButtonGroup');\nlet ButtonToolbar = require('react-bootstrap/lib/ButtonToolbar');\n\nclass Simulator extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      isSimulatorInstalled: false,\n      isSimulatorRunning: false,\n    };\n  }\n\n  @autobind\n  async _openSimulatorAsync() {\n    console.log(\"openSimulatorAsync\");\n    await simulator.openSimulatorAsync();\n  }\n\n  @autobind\n  _installAppInSimulator() {\n    console.log(\"Trying to install app on simulator\");\n    this._installAppInSimulatorAsync().then(() => {\n      console.log(\"Successfully installed app on simulator\");\n    }, (err) => {\n      console.error(\"Problem installing app on simulator: \" + err + \"\\n\" + err.stack);\n    });\n  }\n\n  @autobind\n  async _installAppInSimulatorAsync() {\n    return await simulator.installExponentOnSimulatorAsync();\n  }\n\n  @autobind\n  async _openUrlInSimulatorAsync(url) {\n    let result = await simulator.openUrlInSimulatorAsync(url);\n    await simulator.openSimulatorAsync();\n    return result;\n  }\n\n  @autobind\n  async _openProjectUrlInSimulatorAsync() {\n    let projectUrl = this._projectUrl();\n    console.log(\"projectUrl=\" + projectUrl);\n    return await this._openUrlInSimulatorAsync(projectUrl);\n  }\n\n  _projectUrl() {\n    return urlUtils.constructUrl(this.props.packagerController, {\n      localhost: true,\n      dev: this.props.dev,\n      minify: this.props.minify,\n    });\n  }\n\n  // // This doesn't actually work unfortunately :( The things need to be spaced out\n  // @autobind\n  // async _doEverythingNeededToOpenProjectUrl() {\n  //   await this._openSimulatorAsync();\n  //   await this._installAppInSimulatorAsync();\n  //   await this._openProjectUrlInSimulatorAsync();\n  //   await this._openSimulatorAsync();\n  // }\n\n  render() {\n    let buttonSize = \"medium\";\n\n    let showSimulatorControls = window.XDE_showSimulatorControls;\n    if (showSimulatorControls == null) {\n      showSimulatorControls = !!this.state.isSimulatorInstalled;\n    }\n\n    // showSimulatorControls = false;\n\n    if (!showSimulatorControls) {\n      return <div />;\n    } else {\n      return (\n        <ButtonToolbar style={this.props.style}>\n\n          <Button bsSize={buttonSize} {...{disabled: !this.state.isSimulatorInstalled}} onClick={this._openSimulatorAsync}>Run Simulator</Button>\n          <Button bsSizee={buttonSize} {...{disabled: !this.state.isSimulatorRunning}} onClick={this._installAppInSimulator}>Install Exponent on Simulator</Button>\n          <Button bsSize={buttonSize} {...{disabled: (!this.props.packagerController || !this.state.isSimulatorRunning)}} onClick={this._openProjectUrlInSimulatorAsync}>Open Project in Exponent on Simulator</Button>\n\n        </ButtonToolbar>\n      );\n    }\n  }\n\n  @autobind\n  _updateSimulatorRunningState() {\n    // console.log(\"updateSimulatorRunningState\");\n    simulator.isSimulatorRunningAsync().then((result) => {\n      // console.log(\"updated simulatorRunningState\");\n      this.setState({isSimulatorRunning: result});\n    }, (err) => {\n      console.error(\"Failed to determine if simulator is running\", err);\n    });\n  }\n\n  componentDidMount() {\n\n\n    simulator.isSimulatorInstalledAsync().then((result) => {\n      this.setState({isSimulatorInstalled: result});\n    }, (err) => {\n      console.error(\"Failed to determine if simulator is installed\", err);\n    });\n\n    setInterval(this._updateSimulatorRunningState, 5000);\n    this._updateSimulatorRunningState();\n\n  }\n\n}\n\nmodule.exports = Simulator;\n"],"sourceRoot":"/source/"}